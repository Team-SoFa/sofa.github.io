{"version":3,"sources":["components/Textfield/Textfield.js","components/Button/Button.js","components/Dropdown/Dropdown.js","components/OutsideClick.js","components/Modal/Modal.js","components/Layout/Header.js","components/Layout/Footer.js","components/Accordion/Accordion.js","pages/LandingPage.js","pages/SignPage.js","components/SideMenu/SideMenu.js","components/LinkCard/LinkCard.js","components/LinkCard/ShowLinkCard.js","components/LinkCard/BookmarkDetail.js","pages/RemovedItemsPage.js","pages/FolderPage.js","pages/HomePage.js","components/LinkCard/bookmarks.js","pages/TermsPage.js","pages/PrivacyPolicy.js","App.js","index.js"],"names":["TextField","_ref","label","value","onChange","placeholder","type","required","img","React","createElement","className","src","alt","Button","onClick","imgSrc","imgAlt","isMenuButton","includes","Fragment","Dropdown","options","onSelect","dropdownRef","useRef","isOpen","setIsOpen","OutsideClick","el","initialState","isActive","setIsActive","useState","useEffect","pageClickEvent","e","current","contains","target","window","addEventListener","removeEventListener","selectedValue","setSelectedValue","ref","toggleDropdown","length","map","option","index","key","handleSelect","content","Modal","onClose","children","Header","toggleMenu","location","useLocation","alarmOption","setAlarmOption","folderOption","setFolderOption","tagOption","setTagOption","alarmOptions","item","folderOpt","tagsOpt","headerStyle","backgroundColor","paddingTop","isModalOpen","setIsModalOpen","style","pathname","reload","Link","to","openModal","closeModal","marginBottom","Footer","Accordion","title","toggleAccordion","LandingPage","href","rel","width","ImagePlaceholder","height","placeholderStyle","SignPage","SideMenu","LinkCard","bookmark","onDelete","onEdit","hover","setHover","onMouseEnter","onMouseLeave","id","open","url","ShowLinkCard","bookmarks","sideMenuOpen","bookmarkDetailOpen","onLinkCardClick","sortingOption","sortingDirOption","gridColumns","setGridColumns","calculateGridColumns","windowWidth","innerWidth","columns","Math","floor","parseFloat","getComputedStyle","document","documentElement","fontSize","sortedBookmarks","sortBookmarks","sortingDir","sorted","sort","a","b","localeCompare","reverse","gridTemplateColumns","console","log","BookmarkDetail","tag","RemovedItemsPage","onAddBookmark","onDeleteBookmark","loading","setLoading","isMenuOpen","setIsMenuOpen","selectedBookmark","setSelectedBookmark","setSortingOption","setSortingDirOption","sortingOpt","sortingDirOpt","handleBookmarkClose","FolderPage","folderName","setFolderName","async","error","fetchUserInfo","HomePage","username","setUsername","mostPopularTags","setMostPopularTags","nickname","handleDelete","handleEdit","handleAddBookmark","newBookmark","handleBookmarkClick","renderSection","TermsPage","PrivacyPolicy","App","setBookmarks","initialBookmarks","prevBookmarks","Date","now","handleDeleteBookmark","filter","Routes","Route","path","element","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.20506bab.chunk.js","sourcesContent":["// src/components/TextField.js\nimport React from \"react\";\nimport \"./Textfield.css\"; // 스타일 파일 (선택)\n\nconst TextField = ({\n  label,\n  value,\n  onChange,\n  placeholder,\n  type = \"text\",\n  required = false,\n  img,\n}) => {\n  return (\n    <div className=\"text-field\">\n      {label && <label className=\"text-field-label\">{label}</label>}\n      <div className=\"text-filed-wrapper\">\n        {img && <img className=\"text-field-img\" src={img} alt=\"Field Icon\" />}\n        <input\n          className=\"text-field-input\"\n          type={type}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          required={required}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TextField;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ label, onClick, className, imgSrc, imgAlt }) => {\n  const isMenuButton = className?.includes(\"menu\");\n\n  return (\n    <button className={`btn ${className}`} onClick={onClick}>\n      {isMenuButton ? (\n        // menu 버튼일 때: 이미지만 렌더링\n        imgSrc && (\n          <img\n            className={`btn-img ${className}`}\n            src={imgSrc}\n            alt={imgAlt || \"button image\"}\n          />\n        )\n      ) : (\n        // 일반 버튼일 때: 이미지와 텍스트 렌더링\n        <>\n          {imgSrc && (\n            <img\n              className=\"btn-img\"\n              src={imgSrc}\n              alt={imgAlt || \"button image\"}\n            />\n          )}\n          {label && <span>{label}</span>}\n        </>\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useRef } from \"react\";\nimport \"./Dropdown.css\";\nimport { OutsideClick } from \"../OutsideClick\";\n\nconst Dropdown = ({ className, options, label, onSelect }) => {\n  const dropdownRef = useRef(null); //드롭다운 요소 참조를 위한 ref 생성\n  const [isOpen, setIsOpen] = OutsideClick(dropdownRef, false); //OutsideClick 사용\n  const [selectedValue, setSelectedValue] = useState(null); //선택된 값 상태 관리\n\n  const handleSelect = (value) => {\n    // className이 \"alarm\"일 때 label을 변경하지 않음\n    if (className !== \"alarm\") {\n      setSelectedValue(value);\n    }\n    setIsOpen(false); // 드롭다운 닫기\n    onSelect(value);\n  };\n  const toggleDropdown = () => {\n    //드롭다운 토글 함수\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={`dropdown ${className}`} ref={dropdownRef}>\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\n        {selectedValue ? (\n          selectedValue.label\n        ) : (\n          <span className=\"dropdown-placeholder\">{label}</span>\n        )}\n        {className === \"alarm\" && options?.length > 0 && (\n          <span className=\"dropdown-badge\"></span>\n        )}\n      </div>\n\n      {isOpen && (\n        <div className=\"dropdown-menu\">\n          {options.map((option, index) => (\n            <div\n              key={index}\n              className=\"dropdown-option\"\n              onClick={() => handleSelect(option)}\n            >\n              {option.img && (\n                <img src={option.img} alt=\"\" className=\"dropdown-option-img\" />\n              )}\n              {option.content}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect, useState } from \"react\";\n\nexport const OutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(false); // 외부를 클릭하면 닫힘\n      }\n    };\n\n    if (isActive) {\n      window.addEventListener(\"click\", pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", pageClickEvent);\n    };\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n};\n","// src/components/Modal.js\nimport React from 'react';\nimport './Modal.css';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <button className=\"modal-close\" onClick={onClose}>\n          X\n        </button>\n        <div className=\"modal-content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport TextField from \"../Textfield/Textfield\";\nimport Button from \"../Button/Button\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Modal from \"../Modal/Modal\"; // Modal 컴포넌트 import\n\nimport \"./HeaderStyle.css\";\n\nconst Header = ({ type, toggleMenu }) => {\n  const location = useLocation();\n  const [alarmOption, setAlarmOption] = useState(\"\");\n  const [folderOption, setFolderOption] = useState(\"폴더선택\");\n  const [tagOption, setTagOption] = useState(\"태그선택\");\n\n  const alarmOptions = [\n    { content: \"3일 후 휴지통에서 n개의 링크들이 영원히 빛을 잃게 됩니다.\" },\n    { content: \"또 어떤 알람이 있을까요\" },\n    { content: \"새로운 업데이트가 있습니다.\" },\n    { content: \"새로운 업데이트가 있습니다.\" },\n    { content: \"새로운 업데이트가 있습니다.\" },\n    { content: \"새로운 업데이트가 있습니다.\" },\n  ].map((item) => ({\n    ...item,\n    img: \"example.png\",\n  }));\n  const folderOpt = [\"폴더1\", \"폴더2\", \"폴더3\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const tagsOpt = [\"Documents\", \"Pictures\", \"Music\", \"태그어쩌구1\"].map(\n    (item) => ({\n      label: item,\n      content: item,\n    })\n  );\n  const handleAlarmSelect = (option) => {\n    setAlarmOption(option.content);\n  };\n  const handleFolderSelect = (option) => {\n    setFolderOption(option.content);\n  };\n  const handleTagSelect = (option) => {\n    setTagOption(option.content);\n  };\n\n  const headerStyle =\n    type === \"ONBOARDING\"\n      ? { backgroundColor: \"#F1F1F1\", paddingTop: \"1rem\" }\n      : {};\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태 추가\n\n  // 모달 열기 함수\n  const openModal = () => setIsModalOpen(true);\n\n  // 모달 닫기 함수\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <header className=\"header\" style={headerStyle}>\n      {/* ========== LINK CARD PAGES ========== */}\n      {location.pathname !== \"/\" && (\n        <>\n          <Button\n            className=\"menu\"\n            onClick={toggleMenu}\n            imgSrc=\"icon/menu-icon.png\"\n            imgAlt=\"menu\"\n          />\n          <div className=\"searchers\">\n            {/*className으로 tag말고 다른 게 들어가면 동작이 이상해서 일단 이거 넣음..*/}\n            <Dropdown\n              className=\"tag\"\n              options={folderOpt}\n              label=\"폴더\"\n              onSelect={handleFolderSelect}\n            />\n            <Dropdown\n              className=\"tag\"\n              options={tagsOpt}\n              label=\"태그선택\"\n              onSelect={handleTagSelect}\n            />\n            <TextField\n              className=\"text_field\"\n              placeholder=\"검색어를 입력하세요.\"\n              img=\"example.png\"\n            />\n            <Button label=\"검색\" />\n          </div>\n          <div className=\"user_info\">\n            <Dropdown\n              className=\"alarm\"\n              options={alarmOptions}\n              label=\"알림\"\n              onSelect={handleAlarmSelect}\n            />\n            <Button label=\"계정정보\" />\n          </div>\n        </>\n      )}\n\n      {/* ========== Landing PAGE ========== */}\n      {location.pathname === \"/\" && (\n        <>\n          <img\n            className=\"logo\"\n            src=\"example.png\"\n            alt=\"logo\"\n            onClick={() => window.location.reload()}\n          />\n          <div className=\"buttons\">\n            <Button label=\"확장 프로그램 추가하기\" />\n            <Link to=\"/homepage\">\n              <Button label=\"[임시]홈P\" />\n            </Link>\n            <Link to=\"/signpage\">\n              <Button label=\"[임시]SignP\" />\n            </Link>\n            {/* 모달 열기 버튼 */}\n            <button className=\"header-btn\" onClick={openModal}>\n              [임시]Modal\n            </button>\n          </div>\n        </>\n      )}\n\n      {/* Modal 컴포넌트 */}\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <h2 style={{ marginBottom: \"1rem \" }}>Example for Modal</h2>\n        <p>모달 내용입니다.</p>\n        <p>모</p>\n        <p>달</p>\n      </Modal>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./footer-layout.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <h2>서비스 메인 슬로건 코멘트</h2>\n      <button className=\"button\">시작하기</button>\n      <div className=\"footer-contents\">\n        <div className=\"left-contents\">\n          <p>copyrights @sofa</p>\n          <p>기타 내용1</p>\n          <p>기타 내용2</p>\n        </div>\n        <div className=\"right-contents\">\n          <Link to=\"/termspage\">\n            <p>이용약관</p>\n          </Link>\n          <Link to=\"/privacypolicy\">\n            <p>개인정보처리방침</p>\n          </Link>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./Accordion.css\";\n// import openIcon from \"example.png\";\n// import closeIcon from \"example.png\";\n\nconst Accordion = ({ title, content, type }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleAccordion = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={`accordion ${type}`}>\n      <div className=\"accordion-header\" onClick={toggleAccordion}>\n        <p>{title}</p>\n        <img\n          src={isOpen ? \"example.png\" : \"example.png\"}\n          alt={isOpen ? \"Open\" : \"Close\"}\n          className=\"accordion-icon\"\n        />\n      </div>\n      {isOpen && <div className=\"accordion-content\">{content}</div>}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from \"react\";\nimport Header from \"../components/Layout/Header.js\";\nimport Footer from \"../components/Layout/Footer.js\";\nimport Accordion from \"../components/Accordion/Accordion.js\";\n\nimport \"./LandingPage.css\";\n\nconst LandingPage = () => {\n  const answer1 =\n    \"A. Chrome Extension에서 확장 프로그램을 다운받아 사용합니다.\";\n  const answer2 =\n    \"A. 오늘 저녁은 아직 알 수가 없는데요, 집에 참치와 무 무침이 있어서 그걸 먹을 수도 있고 그냥 라면을 먹을 수도 있지만 불닭은 안먹을 겁니다. 어제 먹었기 때문입니다.?\";\n  const answer3 = \"blah blah\";\n\n  return (\n    <div className=\"landing-page\">\n      <Header type=\"ONBOARDING\" />\n      <main className=\"main-style\">\n        <section className=\"SLOGAN_SEC main-style\">\n          <h1 className=\"slogan\">당신의 시간을 절약하는 최고의 서비스</h1>\n          <p>확장 프로그램을 추가하고 더 많은 기능을 경험하세요</p>\n          <a\n            className=\"button\"\n            href=\"https://chrome.google.com/webstore\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Chrome Web Store 바로가기\n          </a>\n        </section>\n        <section className=\"MAIN_FEAT_SEC  main-style\">\n          <img className=\"service-icon\" src=\"example.png\" alt=\"icon\" />\n          <h2 className=\"title\">주요 서비스 기능, 장점 소개</h2>\n          <div className=\"content-img  main-style\">\n            <img src=\"example.png\" width={\"200px\"} alt=\"main content1\" />\n            <img src=\"example.png\" width={\"200px\"} alt=\"main content2\" />\n            <img src=\"example.png\" width={\"200px\"} alt=\"main content3\" />\n          </div>\n        </section>\n\n        <section className=\"OTHER_FEAT_SEC  main-style\">\n          <img className=\"service-icon\" src=\"example.png\" alt=\"icon\" />\n          <h2 className=\"title\">기타 추가 서비스 소개</h2>\n          <div className=\"grid\">\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>당신만의 북마크 폴더를 공유하고 팀원들과 협업하세요</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>폴더와 태그별로 북마크를 관리하세요</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>\n                이것은 다섯줄짜리 텍스트를 보기 위함입니다. 이것은 다섯줄짜리\n                텍스트를 보기 위함입니다. 이것은 다섯줄짜리\n              </p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>\n                이것은 네줄짜리 텍스트를 보기 위함입니다. 이것은 네줄짜리\n                텍스트를 보기 위함입니다.\n              </p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>description for feature5</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>description for feature6</p>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"FAQ_SEC  main-style\">\n          <img className=\"service-icon\" src=\"example.png\" alt=\"icon\" />\n          <h2 className=\"title\">자주 묻는 질문 / FAQ</h2>\n          <Accordion\n            title=\"Q1. 어떻게 사용하나요?\"\n            content={answer1}\n            type=\"FAQ\"\n          />\n          <Accordion\n            title=\"Q2. 오늘 저녁은 뭔가요?\"\n            content={answer2}\n            type=\"FAQ\"\n          />\n          <Accordion\n            title=\"Q3. 자주 묻는 질문이 뭔가요?\"\n            content={answer3}\n            type=\"FAQ\"\n          />\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\n\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} /> {/* 여기서 크기 설정 */}\n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n          <div className=\"sign-text-button-wrapper\">\n            <Button label=\"Google 계정으로 로그인\" />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./SideMenu.css\";\nimport Accordion from \"../Accordion/Accordion\";\n\nconst SideMenu = ({ isOpen, toggleMenu }) => {\n  return (\n    <div>\n      <div className={`side-menu ${isOpen ? \"open\" : \"\"}`}>\n        <Link to=\"/homepage\" className=\"home\">\n          <img className=\"icon\" src=\"example.png\" alt=\"icon\" />\n          <p>홈</p>\n        </Link>\n        <div className=\"folder\">\n          <Accordion\n            type=\"SIDE_MENU\"\n            title=\"폴더\"\n            content={\n              <>\n                <Link to=\"/folderpage\" className=\"folder-item\">\n                  폴더 1\n                </Link>\n                <Link to=\"/folder2\" className=\"folder-item\">\n                  폴더 2\n                </Link>\n                <Link to=\"/folder3\" className=\"folder-item\">\n                  폴더 3\n                </Link>\n              </>\n            }\n          />\n        </div>\n        <Link to=\"/removeditemspage\" className=\"removeditems\">\n          <img className=\"icon\" src=\"example.png\" alt=\"icon\" />\n          <p>휴지통</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SideMenu;\n","import React, { useState } from \"react\";\nimport \"./LinkCard.css\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Button from \"../Button/Button\";\n\nconst LinkCard = ({ bookmark, onDelete, onEdit, onClick }) => {\n  const [hover, setHover] = useState(false);\n  const [folderOption, setFolderOption] = useState(\"\");\n  const folderOpt = [\"Documents\", \"Pictures\", \"Music\", \"Videos\"].map(\n    (item) => ({\n      label: item,\n      content: item,\n    })\n  );\n  const handleFolderOption = (option) => {\n    setFolderOption(option.content);\n  };\n\n  return (\n    <div\n      className=\"linkCard\"\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={onClick}\n    >\n      <div className=\"link-card-top\">\n        <img className=\"image\" src={bookmark.img} alt={bookmark.title} />\n        {hover && (\n          <div className=\"hover-menus\">\n            <Dropdown\n              className=\"linkcard folder-name\"\n              options={folderOpt}\n              label=\"폴더\"\n              onSelect={handleFolderOption}\n            />\n            <Button\n              className=\"linkcard delete\"\n              label=\"D\"\n              onClick={() => onDelete(bookmark.id)}\n            />\n            <Button className=\"linkcard alarm\" label=\"@\" />\n            <Button\n              className=\"linkcard link\"\n              label=\"바로가기\"\n              onClick={() =>\n                window.open(bookmark.url, \"_blank\", \"noopener noreferrer\")\n              }\n            />\n          </div>\n        )}\n      </div>\n      <p className=\"details\">{bookmark.title}</p>\n    </div>\n  );\n};\n\nexport default LinkCard;\n","// BookmarkList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport LinkCard from \"./LinkCard.js\";\nimport \"./ShowLinkCard.css\";\n\n//bookmarks : 북마크 데이터 배열(id, title, url 포함)\n//onDelete : 북마크 삭제 함수\n//북마크 목록 길이가 0보다 길면 렌더링\nconst ShowLinkCard = ({\n  bookmarks,\n  sideMenuOpen,\n  bookmarkDetailOpen,\n  onDelete,\n  onEdit,\n  onLinkCardClick,\n  sortingOption,\n  sortingDirOption,\n}) => {\n  const [gridColumns, setGridColumns] = useState(6); // 기본적으로 6개 열\n  // 화면 크기와 메뉴 상태에 따라 그리드 열 개수를 동적으로 설정하는 함수\n  const calculateGridColumns = () => {\n    const windowWidth = window.innerWidth;\n    let columns = 6; // 기본 열 개수\n\n    // 메뉴가 열렸을 경우 화면 길이를 빼고 계산\n    if (sideMenuOpen && bookmarkDetailOpen) {\n      columns = Math.floor(\n        (windowWidth -\n          20 *\n            parseFloat(getComputedStyle(document.documentElement).fontSize)) /\n          200\n      ); // sideMenu와 bookmarkDetail이 열렸을 때\n    } else if (sideMenuOpen || bookmarkDetailOpen) {\n      columns = Math.floor(\n        (windowWidth -\n          10 *\n            parseFloat(getComputedStyle(document.documentElement).fontSize)) /\n          200\n      ); // 하나만 열렸을 때\n    } else {\n      columns = Math.floor(windowWidth / 200); // 기본적으로 윈도우 창 크기에 맞춰\n    }\n\n    setGridColumns(columns);\n  };\n\n  // 화면 크기 변경 시 그리드 열 개수 재계산\n  useEffect(() => {\n    window.addEventListener(\"resize\", calculateGridColumns);\n    calculateGridColumns(); // 최초 렌더링 시 한 번 호출\n\n    // 이벤트 리스너 정리\n    return () => {\n      window.removeEventListener(\"resize\", calculateGridColumns);\n    };\n  }, [sideMenuOpen, bookmarkDetailOpen]); // 메뉴 상태가 변경될 때마다 호출\n\n  //Sorting\n  const sortBookmarks = (bookmarks, sortingOption, sortingDir) => {\n    let sorted = [...bookmarks];\n\n    if (sortingOption === \"최근저장\") {\n      sorted = sorted.sort((a, b) => b.id - a.id);\n    } else if (sortingOption === \"오래된저장\") {\n      sorted = sorted.sort((a, b) => a.id - b.id);\n    } else if (sortingOption === \"이름순\") {\n      sorted = sorted.sort((a, b) => a.title.localeCompare(b.title));\n    }\n    if (sortingDir === \"내림차순\") {\n      sorted = sorted.reverse();\n    }\n    return sorted;\n  };\n  const sortedBookmarks = sortBookmarks(\n    bookmarks,\n    sortingOption,\n    sortingDirOption\n  );\n\n  return (\n    <div\n      className=\"bookmark-grid\"\n      style={{ gridTemplateColumns: `repeat(${gridColumns}, 1fr)` }}\n    >\n      {sortedBookmarks.length > 0 ? (\n        sortedBookmarks.map((bookmark) => (\n          <LinkCard\n            key={bookmark.id} //리스트에서 고유 식별자 사용\n            bookmark={bookmark} //각 북마크 데이터를 BookmarkItem에 전달\n            onDelete={onDelete} //삭제 기능을 BookmarkItem에 전달\n            onEdit={onEdit}\n            onClick={() => {\n              console.log(\"Card clicked:\", bookmark);\n              onLinkCardClick(bookmark); // 안전하게 호출\n            }}\n          />\n        ))\n      ) : (\n        <p>...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ShowLinkCard;\n","// src/components/Bookmark/BookmarkDetail.js\nimport React from \"react\";\nimport \"./BookmarkDetail.css\";\nimport Button from \"../Button/Button\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nconst BookmarkDetail = ({ isOpen, bookmark, onEdit, onDelete, onClose }) => {\n  if (!bookmark) return <p>북마크를 선택하세요.</p>;\n\n  // 예시 데이터 추가\n  const exampleTags = [\"React\", \"JavaScript\", \"Frontend\", \"CSS\"];\n  const folderOpt = [\"폴더1\", \"폴더2\", \"폴더3\"];\n\n  return (\n    <div className={`bookmark-detail ${isOpen ? \"open\" : \"\"}`}>\n      {/* 상단 이미지 및 제목 */}\n      <div className=\"bookmark-detail-header\">\n        <img src=\"example.png\" alt={bookmark.title} className=\"detail-image\" />\n        <div className=\"detail-info\">\n          <div className=\"row\">\n            <Button label=\"링크 바로가기\" />\n            <Dropdown className=\"folder\" options={folderOpt} label=\"폴더선택\" />\n          </div>\n          <div className=\"detail-title-container\">\n            <h2 className=\"detail-title\">{bookmark.title}</h2>\n            <Button className=\"detail-edit\" label=\"수정\" />\n          </div>\n        </div>\n      </div>\n\n      {/* 자동 요약 */}\n      <h4>자동 요약</h4>\n      <div className=\"detail-summary\">\n        <h3>자동 요약</h3>\n        <p className=\"summary-text\">\n          AI가 생성한 요약 텍스트가 여기에 표시됩니다. 요약 내용을 넣을 수\n          있습니다.\n        </p>\n        <Button className=\"detail-edit\" label=\"수정\" />\n      </div>\n\n      {/* 추가 설명 */}\n      <h4>추가 설명</h4>\n      <div className=\"detail-description\">\n        <h3>추가 설명</h3>\n        <p className=\"description-text\">\n          추가 설명이 여기에 들어갑니다. 필요에 따라 더 많은 설명을 표시할 수\n          있습니다.\n        </p>\n        <Button className=\"detail-edit\" label=\"수정\" />\n      </div>\n\n      {/* 태그 섹션 */}\n      <div className=\"detail-tags\">\n        <h3>태그</h3>\n        <div className=\"tags-container\">\n          {exampleTags.map((tag, index) => (\n            <span key={index} className=\"tag-item\">\n              {tag}\n            </span>\n          ))}\n          <button className=\"add-tag-btn\">+</button>\n        </div>\n      </div>\n\n      {/* 닫기 버튼 */}\n      <button className=\"close-button\" onClick={onClose}>\n        닫기\n      </button>\n    </div>\n  );\n};\n\nexport default BookmarkDetail;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst RemovedItemsPage = ({ bookmarks, onAddBookmark, onDeleteBookmark }) => {\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(false);\n  const [sortingOption, setSortingOption] = useState(\"최근저장\");\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\");\n\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = (option) => {\n    setSortingDirOption(option.content);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  return (\n    <div\n      className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${\n        selectedBookmark ? \"show-detail\" : \"\"\n      }`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section className=\"main-box\">\n        <h3>휴지통</h3>\n        <div className=\"selected-tags\"></div>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            label=\"최근저장\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            label=\"오름차순\"\n            options={sortingDirOpt}\n            onSelect={handleSortingDirSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n          sideMenuOpen={isMenuOpen}\n          bookmarkDetailOpen={selectedBookmark}\n          sortingOption={sortingOption}\n          sortingDirOption={sortingDirOption}\n        />\n      </section>\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RemovedItemsPage;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst FolderPage = ({ bookmarks, onDeleteBookmark }) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"최근저장\"); //정렬 기준\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\"); //정렬 방향\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = { label: \"폴더명\" };\n        setFolderName(folderNameData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = (option) => {\n    setSortingDirOption(option.content);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  return (\n    <div\n      className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${\n        selectedBookmark ? \"show-detail\" : \"\"\n      }`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section className=\"main-box\">\n        <h3>{folderName}</h3>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            label=\"최근저장\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            label=\"오름차순\"\n            options={sortingDirOpt}\n            onSelect={handleSortingDirSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n          onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n          sideMenuOpen={isMenuOpen}\n          bookmarkDetailOpen={selectedBookmark}\n          sortingOption={sortingOption}\n          sortingDirOption={sortingDirOption}\n        />\n      </section>\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FolderPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Button from \"../components/Button/Button\";\nimport { Link } from \"react-router-dom\";\n// import Tagcard from \"../components/Tagcard/Tagcard\";\n\nimport \"../components/Layout/main-layout.css\";\nimport RemovedItemsPage from \"./RemovedItemsPage\";\nimport FolderPage from \"./FolderPage\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\"; // 상세 정보 컴포넌트 import\n\nconst HomePage = ({ bookmarks, onAddBookmark, onDeleteBookmark }) => {\n  const location = useLocation();\n  const [username, setUsername] = useState(\"\"); //사용자 이름\n  const [mostPopularTags, setMostPopularTags] = useState(\"\");\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [isMenuOpen, setIsMenuOpen] = useState(false); //사이드메뉴 열림 상태\n  // const [sortingOption, setSortingOption] = useState(\"\");\n  // const [selectedTags, setSelectedTags] = useState([]);\n  // const sortingOptions = [\"최근 저장\", \"오래된 저장\", \"오름차순\", \"내림차순\"];\n\n  // 북마크 선택 상태 추가\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n\n  const renderSection = () => {\n    switch (location.pathname) {\n      case \"/removeditemspage\":\n        return <RemovedItemsPage />;\n      case \"/folderpage\":\n        return (\n          <FolderPage bookmarks={bookmarks} onAddBookmark={handleAddBookmark} />\n        );\n      default:\n        return (\n          <div className=\"main-box\">\n            <h3>안녕하세요, {username}님!</h3>\n\n            <div className=\"link-set\">\n              <div className=\"_text\">\n                <p className=\"_title\">{username}님께 추천하는 링크</p>\n                <Link to=\"/homepage\" className=\"more\">\n                  더보기&gt;\n                </Link>\n              </div>\n              <ShowLinkCard\n                bookmarks={bookmarks}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n                onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n                sideMenuOpen={isMenuOpen}\n                bookmarkDetailOpen={selectedBookmark}\n                // sortingOption={sortingOption}\n              />\n            </div>\n            <div className=\"link-set\">\n              <div className=\"_text\">\n                <p className=\"_title\">최근에 방문한 링크</p>\n                <Link to=\"/homepage\" className=\"more\">\n                  더보기&gt;\n                </Link>\n              </div>\n              <ShowLinkCard\n                bookmarks={bookmarks}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n                onLinkCardClick={handleBookmarkClick}\n                sideMenuOpen={isMenuOpen}\n                bookmarkDetailOpen={selectedBookmark}\n                // sortingOption={sortingOption}\n              />\n            </div>\n            <div className=\"link-set\">\n              <div className=\"_text\">\n                <p className=\"_title\">\n                  {username}님의 최다 태그\n                  <Button label={mostPopularTags} className=\"tag\" />를 포함한\n                  링크\n                </p>\n                <Link to=\"/homepage\" className=\"more\">\n                  더보기&gt;\n                </Link>\n              </div>\n              <ShowLinkCard\n                bookmarks={bookmarks}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n                onLinkCardClick={handleBookmarkClick}\n                sideMenuOpen={isMenuOpen}\n                bookmarkDetailOpen={selectedBookmark}\n                // sortingOption={sortingOption}\n              />\n            </div>\n          </div>\n        );\n    }\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // USER INFO\n        //const userResponse = await fetch(\"/api/user\");\n        //const userData = await userResponse.json();\n        const userData = { nickname: \"000\" };\n        setUsername(userData.nickname);\n\n        // MOST_POPULAR_TAGS\n        // const topTagsResponse = await fetch(\"/api/tags/top\");\n        // const topTagsData = await topTagsResponse.json();\n        const topTagsData = { label: \"탑태그\" };\n        setMostPopularTags(topTagsData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n  const handleAddBookmark = (newBookmark) => {\n    onAddBookmark(newBookmark);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  // TAG\n  // const handleTagSelect = (tag) => {\n  //   if (!selectedTags.includes(tag)) {\n  //     setSelectedTags([...selectedTags, tag]); //태그 추가\n  //   }\n  // };\n  // const handleTagRemove = (tag) => {\n  //   setSelectedTags(selectedTags.filter((t) => t !== tag)); //태그 제거\n  // };\n\n  // SORTING\n  // const handleSortingSelect = (option) => {\n  //   setSortingOption(option);\n  // };\n\n  //SideMenu Toggle\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <div\n      className={`main-page \n        ${isMenuOpen ? \"menu-open\" : \"\"} \n        ${selectedBookmark ? \"show-detail\" : \"\"}`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section>{renderSection()}</section>\n\n      {/* 상세 정보 */}\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const bookmarks = [\n  { id: 1, title: \"Google\", url: \"https://www.google.com\", img: \"example.png\" },\n  {\n    id: 5,\n    title: \"MDN Web Docs\",\n    url: \"https://developer.mozilla.org\",\n    img: \"example.png\",\n  },\n  { id: 6, title: \"React\", url: \"https://reactjs.org\", img: \"example.png\" },\n  {\n    id: 7,\n    title: \"YouTube\",\n    url: \"https://www.youtube.com\",\n    img: \"example.png\",\n  },\n  {\n    id: 8,\n    title: \"스택 프레임 이해하기\",\n    url: \"https://velog.io/@hamham/%EC%8A%A4%ED%83%9D%ED%94%84%EB%A0%88%EC%9E%84-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\",\n    img: \"example.png\",\n  },\n  {\n    id: 9,\n    title: \"URL이 두줄인데 제목도 두줄까지 길어진다면\",\n    url: \"https://www.kw.ac.kr/ko/life/notice.jsp?BoardMode=view&DUID=47837&tpage=1&searchKey=1&searchVal=&srCategoryId=\",\n    img: \"example.png\",\n  },\n  {\n    id: 12,\n    title: \"나의 ex..컬러버스<3\",\n    url: \"https://www.mk.co.kr/news/it/10882354\",\n    img: \"example.png\",\n  },\n  {\n    id: 13,\n    title: \"고슴도치의 가시는 털일까?\",\n    url: \"https://m.blog.naver.com/dnjsifjqjd/221181323254\",\n    img: \"example.png\",\n  },\n];\n","import React from \"react\";\n\nconst TermsPage = () => {\n  return (\n    <div>\n      <p>이용약관</p>\n    </div>\n  );\n};\n\nexport default TermsPage;\n","import React from \"react\";\n\nconst PrivacyPolicy = () => {\n  return (\n    <div>\n      <p>개인정보처리방침</p>\n    </div>\n  );\n};\n\nexport default PrivacyPolicy;\n","import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\"; // 라우터 import\nimport LandingPage from \"./pages/LandingPage\";\nimport SignPage from \"./pages/SignPage\";\n//import OnBoardingPage from \"./pages/OnBoardingPage\";\nimport HomePage from \"./pages/HomePage\";\nimport FolderPage from \"./pages/FolderPage\";\nimport RemovedItemsPage from \"./pages/RemovedItemsPage\";\nimport { bookmarks as initialBookmarks } from \"./components/LinkCard/bookmarks\";\nimport TermsPage from \"./pages/TermsPage\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\n\nfunction App() {\n  const [bookmarks, setBookmarks] = useState(initialBookmarks);\n\n  const handleAddBookmark = (newBookmark) => {\n    setBookmarks((prevBookmarks) => [\n      ...prevBookmarks,\n      { id: Date.now(), ...newBookmark },\n    ]);\n  };\n  const handleDeleteBookmark = (id) => {\n    setBookmarks((prevBookmarks) => prevBookmarks.filter((b) => b.id !== id));\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<LandingPage />} />\n      <Route path=\"/signpage\" element={<SignPage />} />\n      <Route path=\"/termspage\" element={<TermsPage />} />\n      <Route path=\"/privacypolicy\" element={<PrivacyPolicy />} />\n\n      <Route\n        path=\"/homepage\"\n        element={\n          <HomePage\n            bookmarks={bookmarks}\n            onAddBookmark={handleAddBookmark}\n            onDeleteBookmark={handleDeleteBookmark}\n          />\n        }\n      />\n\n      <Route\n        path=\"/folderpage\"\n        element={\n          <FolderPage\n            bookmarks={bookmarks}\n            onAddBookmark={handleAddBookmark}\n            onDeleteBookmark={handleDeleteBookmark}\n          />\n        }\n      />\n      <Route\n        path=\"/removeditemspage\"\n        element={\n          <RemovedItemsPage\n            bookmarks={bookmarks}\n            onAddBookmark={handleAddBookmark}\n            onDeleteBookmark={handleDeleteBookmark}\n          />\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom'; // Router를 index.js에서 사용\nimport App from './App';\nimport './styles/Typography/Typography.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}